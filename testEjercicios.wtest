import cosas.*
import camion.*

test "caso de prueba : cargar y descargar cosas" {
    assert.equals(#{}, camion.cosas())

    camion.cargar(bumblebee)
    assert.that(camion.cosas().contains(bumblebee))

    camion.cargar(knightRider)
    assert.that(camion.cosas().contains(knightRider))
    assert.that(camion.cosas().contains(bumblebee))

    camion.descargar(bumblebee)
    assert.that(!camion.cosas().contains(bumblebee))
    assert.that(camion.cosas().contains(knightRider))

    assert.throwsException({ camion.cargar(knightRider) })

    assert.throwsException({ camion.descargar(bumblebee) })
}

test "caso de prueba: esTodoPesoPar" {
    assert.that(camion.cosas().isEmpty())
    camion.cargar(bumblebee)
    camion.cargar(arenaAlGranel)
    arenaAlGranel.peso(50)

    assert.that(camion.esTodoPesoPar())

    arenaAlGranel.peso(51)
    assert.notThat(camion.esTodoPesoPar())
}

test "caso de prueba : tieneAlgoQuePesa" {
    assert.that(camion.cosas().isEmpty())
    camion.cargar(bumblebee)
    camion.cargar(arenaAlGranel)
    arenaAlGranel.peso(50)

    assert.that(camion.tieneAlgoQuePesa(50))
    assert.that(camion.tieneAlgoQuePesa(800))

    assert.notThat(camion.tieneAlgoQuePesa(500))
}

test "caso de prueba : esPesoExcedido" {
    assert.that(camion.cosas().isEmpty())
    assert.notThat(camion.esPesoExcedido())

    camion.cargar(bumblebee)
    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.cantidadLadrillos(300)
    assert.equals(2400, camion.pesoTotal())
    assert.notThat(camion.esPesoExcedido())

    paqueteDeLadrillos.cantidadLadrillos(400)
    assert.equals(2600, camion.pesoTotal())
    assert.that(camion.esPesoExcedido())
}

test "caso de prueba : cosaDeNivelDePeligrosidad" {

    camion.cargar(bumblebee)
    assert.that(bumblebee.estaTransformadoEnAuto())
    camion.cargar(bateriaAntiaerea)
    assert.notThat(bateriaAntiaerea.tieneMisiles())
    camion.cargar(residuosRadioactivos)

    assert.equals(bateriaAntiaerea, camion.cosaDeNivelDePeligrosidad(0))
    assert.equals(bumblebee, camion.cosaDeNivelDePeligrosidad(15))
    assert.equals(residuosRadioactivos, camion.cosaDeNivelDePeligrosidad(200))
    
    assert.throwsException({ camion.cosaDeNivelDePeligrosidad(30) })

    bumblebee.transformarEnRobot()
    assert.equals(bumblebee, camion.cosaDeNivelDePeligrosidad(30))

    bateriaAntiaerea.cargarMisiles()
    assert.equals(bateriaAntiaerea, camion.cosaDeNivelDePeligrosidad(100))
}

test "caso de prueba : cosasQueSuperenNivelDePeligrosidad y cosasMasPeligrosasQue" {
    camion.cargar(knightRider)
    camion.cargar(bateriaAntiaerea)
    bateriaAntiaerea.cargarMisiles()

    assert.equals(#{bateriaAntiaerea}, camion.cosasQueSuperenNivelDePeligrosidad(15))
    assert.equals(#{bateriaAntiaerea}, camion.cosasMasPeligrosasQue(bumblebee))

    assert.equals(#{knightRider, bateriaAntiaerea}, camion.cosasQueSuperenNivelDePeligrosidad(2))

    bateriaAntiaerea.descargarMisiles()
    assert.equals(#{knightRider}, camion.cosasMasPeligrosasQue(paqueteDeLadrillos))

    assert.equals(#{}, camion.cosasQueSuperenNivelDePeligrosidad(200))
    assert.equals(#{}, camion.cosasMasPeligrosasQue(residuosRadioactivos))
}

test "caso de prueba : puedeCircularEnRutaDeNivel " {
    camion.cargar(bumblebee)
    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.cantidadLadrillos(300)

    assert.that(camion.puedeCircularEnRutaDeNivel(20))

    paqueteDeLadrillos.cantidadLadrillos(400)
    assert.notThat(camion.puedeCircularEnRutaDeNivel(20))
    assert.that(camion.esPesoExcedido())

    paqueteDeLadrillos.cantidadLadrillos(300)
    bumblebee.transformarEnRobot()
    assert.notThat(camion.puedeCircularEnRutaDeNivel(20))
    assert.equals(#{bumblebee}, camion.cosasQueSuperenNivelDePeligrosidad(20))
}

test "caso de prueba : embalajeDeSeguridad y contenedorPortuario" {
    assert.equals(100, contenedorPortuario.peso())
    assert.equals(0, contenedorPortuario.nivelPeligrosidad())
    
    contenedorPortuario.cargar(knightRider)
    contenedorPortuario.cargar(arenaAlGranel)
    arenaAlGranel.peso(50)

    assert.equals(650, contenedorPortuario.peso())
    assert.equals(10, contenedorPortuario.nivelPeligrosidad())

    embalajeDeSeguridad.embalar(knightRider)
    assert.equals(500, embalajeDeSeguridad.peso())
    assert.equals(5, embalajeDeSeguridad.nivelPeligrosidad())

    embalajeDeSeguridad.embalar(bumblebee)
    assert.that(bumblebee.estaTransformadoEnAuto())
    assert.equals(800, embalajeDeSeguridad.peso())
    assert.equals(7.5, embalajeDeSeguridad.nivelPeligrosidad())
}

test "caso de prueba : tieneAlgoQuePesaEntre(tanto, tanto)" {
    camion.cargar(bumblebee)
    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.cantidadLadrillos(300)

    assert.that(camion.tieneAlgoQuePesaEntre(5, 700))
    assert.that(camion.tieneAlgoQuePesaEntre(5, 1000))
    assert.notThat(camion.tieneAlgoQuePesaEntre(900, 1000))
}

test "caso de prueba : cosaMasPesada()" {
    assert.throwsException({ camion.cosaMasPesada() })

    camion.cargar(bumblebee)
    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.cantidadLadrillos(300)
    assert.equals(bumblebee, camion.cosaMasPesada())

    paqueteDeLadrillos.cantidadLadrillos(500)
    assert.equals(paqueteDeLadrillos, camion.cosaMasPesada())
}

test "caso de prueba : pesosDeCosas()" {
    assert.that(camion.cosas().isEmpty())

    camion.cargar(bumblebee)
    assert.equals([800], camion.pesosDeLasCosasCargadas())

    camion.cargar(paqueteDeLadrillos)
    paqueteDeLadrillos.cantidadLadrillos(300)
    assert.equals([800, 600], camion.pesosDeLasCosasCargadas())

    camion.cargar(knightRider)
    assert.equals([800, 600, 500], camion.pesosDeLasCosasCargadas())
}